// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Translate components allows for overwriting prop values by passing options to translate 1`] = `
<WrappedComponent
  interpolated="Kurt"
  translations={Object {}}
>
  <Component
    interpolated="Kurt"
    translate={[Function]}
  >
    <span>
      This is going to be Maschmüller
    </span>
  </Component>
</WrappedComponent>
`;

exports[`Translate components allows for translation of enum values 1`] = `
<WrappedComponent
  translations={Object {}}
>
  <Component
    translate={[Function]}
  >
    <span>
      Überentwurf
    </span>
  </Component>
</WrappedComponent>
`;

exports[`Translate components does not touch non-translation props 1`] = `
<WrappedComponent
  notToBeTranslated={99}
  translations={Object {}}
>
  <Component
    notToBeTranslated={99}
    translate={[Function]}
  >
    <span>
      99
    </span>
  </Component>
</WrappedComponent>
`;

exports[`Translate components falls back to the global translations 1`] = `
<WrappedComponent
  translations={Object {}}
>
  <Component
    translate={[Function]}
  >
    <span>
      Anfrage
    </span>
  </Component>
</WrappedComponent>
`;

exports[`Translate components formats money correctly for the language 1`] = `
<WrappedComponent
  amount={42.37}
  translations={Object {}}
>
  <Component
    amount={42.37}
    translate={[Function]}
  >
    <span>
      Du hast € 42,37!
    </span>
  </Component>
</WrappedComponent>
`;

exports[`Translate components formats money correctly for the language 2`] = `
<WrappedComponent
  amount={2500.01}
  translations={Object {}}
>
  <Component
    amount={2500.01}
    translate={[Function]}
  >
    <span>
      Du hast CHF 2’500.01!
    </span>
  </Component>
</WrappedComponent>
`;

exports[`Translate components handles pluralisation 1`] = `
<WrappedComponent
  numBurgers={0}
  translations={Object {}}
>
  <Component
    numBurgers={0}
    translate={[Function]}
  >
    <span>
      Let's eat no burgers today.
    </span>
  </Component>
</WrappedComponent>
`;

exports[`Translate components handles pluralisation 2`] = `
<WrappedComponent
  numBurgers={1}
  translations={Object {}}
>
  <Component
    numBurgers={1}
    translate={[Function]}
  >
    <span>
      Let's eat one burger today.
    </span>
  </Component>
</WrappedComponent>
`;

exports[`Translate components handles pluralisation 3`] = `
<WrappedComponent
  numBurgers={99}
  translations={Object {}}
>
  <Component
    numBurgers={99}
    translate={[Function]}
  >
    <span>
      Let's eat 99 burgers today.
    </span>
  </Component>
</WrappedComponent>
`;

exports[`Translate components translates values using the locale 1`] = `
<WrappedComponent
  translations={Object {}}
>
  <Component
    translate={[Function]}
  >
    <span>
      Good day, Sir.
    </span>
  </Component>
</WrappedComponent>
`;

exports[`Translate components uses a translation from the translation props 1`] = `
<WrappedComponent
  translations={
    Object {
      "en_GB": Object {
        "title": "Proper title",
      },
    }
  }
>
  <Component
    translate={[Function]}
  >
    <span>
      Proper title
    </span>
  </Component>
</WrappedComponent>
`;

exports[`Translate components uses the key when no translation is found and warns about it 1`] = `
<WrappedComponent
  translations={Object {}}
>
  <Component
    translate={[Function]}
  >
    <span>
      blaBlubb
    </span>
  </Component>
</WrappedComponent>
`;
